name: Create Repositories for Firebase Android SDK Issues

# on:
#   schedule:
#     - cron: "*/1 * * * *"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
jobs:
  create-repos:
    runs-on: ubuntu-latest
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repository
      - uses: actions/checkout@v3
      
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
        
#       - name: Set up Git
#         run: |
#           git config --global user.email ${{ secrets.MY_EMAIL }}
#           git config --global user.name ${{ secrets.MY_NAME }}
      
#       - name: Install dependencies
#         run: npm install @octokit/rest
        
#       - name: Run script
#         run: node my-script.js
#         env:
#           GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        
#       - name: Create repositories for Firebase Android issues
#         uses: actions/github-script@v4
#         with:
#           github-token: ${{ secrets.MY_TOKEN }}
#           script: |
#             const octokit = new github.GitHub(context.token);
#             const date = new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString().substr(0, 10);
#             const issues = await octokit.issues.listForRepo({
#               owner: 'firebase',
#               repo: 'firebase-android-sdk',
#               state: 'open',
#               since: date
#             });
#             for (const issue of issues.data) {
#               const repoName = issue.title.toLowerCase().replace(/[^a-z0-9]/g, '-');
#               await octokit.repos.createForAuthenticatedUser({
#                 name: repoName,
#                 private: true
#               });
#             }
